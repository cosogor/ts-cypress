{
  "stats": {
    "suites": 0,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-01-18T23:58:08.040Z",
    "end": "2022-01-18T23:58:19.720Z",
    "duration": 11680,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ecd403f5-07b3-4b4f-a9bb-84e5cb76cd11",
      "title": "",
      "fullFile": "cypress/integration/test001.ts",
      "file": "cypress/integration/test001.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "assertions",
          "fullTitle": "assertions",
          "timedOut": null,
          "duration": 5077,
          "state": "passed",
          "speed": "medium",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit('https://example.cypress.io');\ncy.contains('get').click();\n// implicit asserts from cypress\ncy.get('#query-btn', { timeout: 5000 })\n    // should contain\n    .should('contain', 'Button')\n    .should('contain.text', 'Button')\n    // should have\n    .should('have.class', 'query-btn btn btn-primary')\n    .should('have.id', 'query-btn')\n    // should be\n    .should('be.visible')\n    .should('be.enabled')\n    .should('not.be.focused');\n//should equal\ncy.get('#query-btn').invoke('attr', 'id')\n    .should('equal', 'query-btn');\n// and for chained assertions\ncy.get('#query-btn', { timeout: 5000 })\n    .should('contain', 'Button')\n    .and('contain.text', 'Button');\n//explicit assertions from chai\n//expect\nexpect(true).to.be.true;\nlet name = 123;\nexpect(name).to.be.eqls(123);\n//assert from chai\nassert.equal(123, 123, 'Not stricly equal');\nassert.notEqual(123, 1234, 'Not stricly equal');\nassert.strictEqual(123, 123, 'Not stricly equal');\nassert.isAbove(123, 12);\nassert.isBelow(12, 123);\nassert.isAbove(123, 12);\nassert.exists(123, 'Target neither null nor defined');\nassert.notExists(null, 'Target neither null nor defined');\nassert.isTrue(true);\nassert.isFalse(false);\nassert.isString('123');\nassert.isNotString(123);\nassert.isNumber(123);\nassert.isNotNumber('123');",
          "err": {},
          "uuid": "25037524-d66c-4aff-9628-3af6497eb73e",
          "parentUUID": "ecd403f5-07b3-4b4f-a9bb-84e5cb76cd11",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "25037524-d66c-4aff-9628-3af6497eb73e"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 5077,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports"
      },
      "version": "6.0.1"
    }
  }
}